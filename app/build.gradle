plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.flutter_screen_open_from_android_intent_1"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.3.1' // Use the latest version compatible with your Kotlin version
        kotlinCompilerVersion '1.7.10'
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.flutter_screen_open_from_android_intent_1"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
//    implementation 'androidx.appcompat:appcompat:1.5.0'
//
//    implementation 'androidx.core:core-ktx:1.6.0'
//    implementation 'androidx.compose.ui:ui:1.0.5'
//    implementation 'androidx.compose.material:material:1.0.5'
//    implementation 'androidx.compose.ui:ui-tooling-preview:1.0.5'
////    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
//    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
//    implementation 'androidx.activity:activity-compose:1.3.1'

    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.compose.ui:ui:1.0.5'
    implementation 'androidx.compose.material:material:1.0.5'
    implementation 'androidx.compose.ui:ui-tooling-preview:1.0.5'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1' // Ensure this matches the runtime version
    implementation 'androidx.activity:activity-compose:1.3.1'
}
